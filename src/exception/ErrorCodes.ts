/**
 * @fileoverview Unified Error Code System
 *
 * Comprehensive, hierarchical error code system that consolidates all error codes
 * from different modules to eliminate duplication and provide consistent error handling.
 *
 * Format: {MODULE}_{CATEGORY}_{SPECIFIC_ERROR}
 * - MODULE: 3-letter module prefix (SYS, REG, SVC, PLG, CTX, EVH, CFG, RES)
 * - CATEGORY: 4-digit category number for grouping related errors
 * - SPECIFIC_ERROR: Descriptive error name in UPPER_SNAKE_CASE
 */

/**
 * Unified error codes consolidating all modules
 */
export enum UnifiedErrorCode {
  // ═══════════════════════════════════════════════════════════════════
  // Core System Errors (1000-1999)
  // ═══════════════════════════════════════════════════════════════════
  
  // General system errors (1000-1099)
  UNKNOWN_ERROR = 'SYS_1000_UNKNOWN_ERROR',
  OPERATION_CANCELLED = 'SYS_1001_OPERATION_CANCELLED',
  TIMEOUT_ERROR = 'SYS_1002_TIMEOUT_ERROR',
  INVALID_OPERATION = 'SYS_1003_INVALID_OPERATION',
  PERMISSION_DENIED = 'SYS_1004_PERMISSION_DENIED',
  OPERATION_NOT_ALLOWED = 'SYS_1005_OPERATION_NOT_ALLOWED',
  
  // State management errors (1100-1199)
  INVALID_STATE_TRANSITION = 'SYS_1100_INVALID_STATE_TRANSITION',
  INVALID_STATE = 'SYS_1101_INVALID_STATE',
  NOT_INITIALIZED = 'SYS_1102_NOT_INITIALIZED',
  ALREADY_DISPOSED = 'SYS_1103_ALREADY_DISPOSED',
  
  // Configuration errors (1200-1299)
  INVALID_CONFIGURATION = 'SYS_1200_INVALID_CONFIGURATION',
  MISSING_REQUIRED_CONFIG = 'SYS_1201_MISSING_REQUIRED_CONFIG',
  CONFIGURATION_VALIDATION_FAILED = 'SYS_1202_CONFIGURATION_VALIDATION_FAILED',
  CONFIGURATION_SOURCE_ERROR = 'SYS_1203_CONFIGURATION_SOURCE_ERROR',
  
  // Dependency errors (1300-1399)
  MISSING_DEPENDENCIES = 'SYS_1300_MISSING_DEPENDENCIES',
  DEPENDENCY_CONFLICT = 'SYS_1301_DEPENDENCY_CONFLICT',
  CIRCULAR_DEPENDENCY = 'SYS_1302_CIRCULAR_DEPENDENCY',
  DEPENDENCY_RESOLUTION_FAILED = 'SYS_1303_DEPENDENCY_RESOLUTION_FAILED',
  INCOMPATIBLE_VERSION = 'SYS_1304_INCOMPATIBLE_VERSION',
  
  // ═══════════════════════════════════════════════════════════════════
  // BaseRegistry Errors (2000-2999)
  // ═══════════════════════════════════════════════════════════════════
  
  // Registration errors (2000-2099)
  REGISTRY_ENTRY_NOT_FOUND = 'REG_2000_ENTRY_NOT_FOUND',
  REGISTRY_ENTRY_ALREADY_REGISTERED = 'REG_2001_ENTRY_ALREADY_REGISTERED',
  REGISTRY_ENTRY_NOT_REGISTERED = 'REG_2002_ENTRY_NOT_REGISTERED',
  INVALID_REGISTRY_ENTRY_DESCRIPTOR = 'REG_2003_INVALID_ENTRY_DESCRIPTOR',
  INVALID_REGISTRY_ENTRY_FACTORY = 'REG_2004_INVALID_ENTRY_FACTORY',
  INVALID_REGISTRY_ENTRY_INSTANCE = 'REG_2005_INVALID_ENTRY_INSTANCE',
  INVALID_REGISTRY_ENTRY_LIFETIME = 'REG_2006_INVALID_ENTRY_LIFETIME',
  REGISTRATION_FAILED = 'REG_2007_REGISTRATION_FAILED',
  UNREGISTRATION_FAILED = 'REG_2008_UNREGISTRATION_FAILED',
  
  // Resolution errors (2100-2199)
  REGISTRY_RESOLUTION_FAILED = 'REG_2100_RESOLUTION_FAILED',
  REGISTRY_ENTRY_RESOLUTION_FAILED = 'REG_2101_ENTRY_RESOLUTION_FAILED',
  FACTORY_EXECUTION_FAILED = 'REG_2102_FACTORY_EXECUTION_FAILED',
  REGISTRY_ENTRY_INSTANTIATION_FAILED = 'REG_2103_ENTRY_INSTANTIATION_FAILED',
  DEPENDENCY_INJECTION_FAILED = 'REG_2104_DEPENDENCY_INJECTION_FAILED',
  
  // BaseRegistry state errors (2200-2299)
  REGISTRY_NOT_INITIALIZED = 'REG_2200_NOT_INITIALIZED',
  REGISTRY_ALREADY_DISPOSED = 'REG_2201_ALREADY_DISPOSED',
  INVALID_REGISTRY_STATE = 'REG_2202_INVALID_STATE',
  REGISTRY_CONFIGURATION_ERROR = 'REG_2203_CONFIGURATION_ERROR',
  
  // Interceptor and middleware errors (2300-2399)
  INTERCEPTOR_ERROR = 'REG_2300_INTERCEPTOR_ERROR',
  MIDDLEWARE_ERROR = 'REG_2301_MIDDLEWARE_ERROR',
  INTERCEPTOR_REGISTRATION_FAILED = 'REG_2302_INTERCEPTOR_REGISTRATION_FAILED',
  MIDDLEWARE_REGISTRATION_FAILED = 'REG_2303_MIDDLEWARE_REGISTRATION_FAILED',
  
  // Scoped registry errors (2400-2499)
  SCOPED_REGISTRY_ERROR = 'REG_2400_SCOPED_REGISTRY_ERROR',
  SCOPED_SERVICE_ACCESS_ERROR = 'REG_2401_SCOPED_SERVICE_ACCESS_ERROR',
  PARENT_REGISTRY_ERROR = 'REG_2402_PARENT_REGISTRY_ERROR',
  
  // Performance and metrics errors (2500-2599)
  METRICS_COLLECTION_ERROR = 'REG_2500_METRICS_COLLECTION_ERROR',
  PERFORMANCE_DEGRADATION = 'REG_2501_PERFORMANCE_DEGRADATION',
  MEMORY_LEAK_DETECTED = 'REG_2502_MEMORY_LEAK_DETECTED',
  
  // ═══════════════════════════════════════════════════════════════════
  // Service Errors (3000-3999)
  // ═══════════════════════════════════════════════════════════════════
  
  // Service lifecycle errors (3000-3099)
  SERVICE_NOT_FOUND = 'SVC_3000_SERVICE_NOT_FOUND',
  SERVICE_REGISTRATION_FAILED = 'SVC_3001_REGISTRATION_FAILED',
  SERVICE_UNREGISTRATION_FAILED = 'SVC_3002_UNREGISTRATION_FAILED',
  SERVICE_RESOLUTION_FAILED = 'SVC_3003_RESOLUTION_FAILED',
  SERVICE_NOT_REGISTERED = 'SVC_3004_NOT_REGISTERED',
  SERVICE_LOOKUP_FAILED = 'SVC_3005_LOOKUP_FAILED',
  SERVICE_DEPENDENCY_FAILED = 'SVC_3006_DEPENDENCY_FAILED',
  SERVICE_INJECTION_FAILED = 'SVC_3007_INJECTION_FAILED',
  
  // Service state errors (3100-3199)
  SERVICE_UNAVAILABLE = 'SVC_3100_UNAVAILABLE',
  SERVICE_INITIALIZATION_FAILED = 'SVC_3101_INITIALIZATION_FAILED',
  SERVICE_START_FAILED = 'SVC_3102_START_FAILED',
  SERVICE_STOP_FAILED = 'SVC_3103_STOP_FAILED',
  SERVICE_PAUSE_FAILED = 'SVC_3104_PAUSE_FAILED',
  SERVICE_RESUME_FAILED = 'SVC_3105_RESUME_FAILED',
  SERVICE_DESTROY_FAILED = 'SVC_3106_DESTROY_FAILED',
  
  // ═══════════════════════════════════════════════════════════════════
  // Plugin Errors (4000-4999)
  // ═══════════════════════════════════════════════════════════════════
  
  // Plugin discovery and loading (4000-4099)
  PLUGIN_NOT_FOUND = 'PLG_4000_PLUGIN_NOT_FOUND',
  PLUGIN_LOAD_FAILED = 'PLG_4001_LOAD_FAILED',
  INVALID_PLUGIN_FORMAT = 'PLG_4002_INVALID_FORMAT',
  UNSUPPORTED_PLUGIN_TYPE = 'PLG_4003_UNSUPPORTED_TYPE',
  PLUGIN_ALREADY_LOADED = 'PLG_4004_ALREADY_LOADED',
  MISSING_PLUGIN_MANIFEST = 'PLG_4005_MISSING_MANIFEST',
  NO_SUITABLE_LOADER = 'PLG_4006_NO_SUITABLE_LOADER',
  
  // Plugin initialization (4100-4199)
  PLUGIN_INITIALIZATION_FAILED = 'PLG_4100_INITIALIZATION_FAILED',
  PLUGIN_MISSING_DEPENDENCIES = 'PLG_4101_MISSING_DEPENDENCIES',
  PLUGIN_DEPENDENCY_CONFLICT = 'PLG_4102_DEPENDENCY_CONFLICT',
  PLUGIN_INCOMPATIBLE_VERSION = 'PLG_4103_INCOMPATIBLE_VERSION',
  PLUGIN_INVALID_CONFIGURATION = 'PLG_4104_INVALID_CONFIGURATION',
  PLUGIN_MISSING_REQUIRED_CONFIG = 'PLG_4105_MISSING_REQUIRED_CONFIG',
  
  // Plugin execution (4200-4299)
  PLUGIN_EXECUTION_FAILED = 'PLG_4200_EXECUTION_FAILED',
  PLUGIN_METHOD_NOT_IMPLEMENTED = 'PLG_4201_METHOD_NOT_IMPLEMENTED',
  PLUGIN_INVALID_OPERATION = 'PLG_4202_INVALID_OPERATION',
  PLUGIN_OPERATION_TIMEOUT = 'PLG_4203_OPERATION_TIMEOUT',
  PLUGIN_RESOURCE_UNAVAILABLE = 'PLG_4204_RESOURCE_UNAVAILABLE',
  PLUGIN_PERMISSION_DENIED = 'PLG_4205_PERMISSION_DENIED',
  
  // Plugin lifecycle (4300-4399)
  PLUGIN_LOAD_LIFECYCLE_FAILED = 'PLG_4300_LOAD_LIFECYCLE_FAILED',
  PLUGIN_START_LIFECYCLE_FAILED = 'PLG_4301_START_LIFECYCLE_FAILED',
  PLUGIN_STOP_LIFECYCLE_FAILED = 'PLG_4302_STOP_LIFECYCLE_FAILED',
  PLUGIN_PAUSE_LIFECYCLE_FAILED = 'PLG_4303_PAUSE_LIFECYCLE_FAILED',
  PLUGIN_RESUME_LIFECYCLE_FAILED = 'PLG_4304_RESUME_LIFECYCLE_FAILED',
  PLUGIN_DESTROY_LIFECYCLE_FAILED = 'PLG_4305_DESTROY_LIFECYCLE_FAILED',
  PLUGIN_CLEANUP_FAILED = 'PLG_4306_CLEANUP_FAILED',
  PLUGIN_HEALTH_CHECK_FAILED = 'PLG_4307_HEALTH_CHECK_FAILED',
  
  // Plugin registry (4400-4499)
  PLUGIN_REGISTRY_ERROR = 'PLG_4400_REGISTRY_ERROR',
  PLUGIN_REGISTRATION_FAILED = 'PLG_4401_REGISTRATION_FAILED',
  PLUGIN_UNREGISTRATION_FAILED = 'PLG_4402_UNREGISTRATION_FAILED',
  DUPLICATE_PLUGIN_ID = 'PLG_4403_DUPLICATE_ID',
  PLUGIN_NOT_REGISTERED = 'PLG_4404_NOT_REGISTERED',
  INVALID_PLUGIN_METADATA = 'PLG_4405_INVALID_METADATA',
  
  // Plugin communication (4500-4599)
  PLUGIN_MESSAGE_DELIVERY_FAILED = 'PLG_4500_MESSAGE_DELIVERY_FAILED',
  PLUGIN_INVALID_MESSAGE_FORMAT = 'PLG_4501_INVALID_MESSAGE_FORMAT',
  PLUGIN_COMMUNICATION_TIMEOUT = 'PLG_4502_COMMUNICATION_TIMEOUT',
  
  // Plugin manager (4600-4699)
  PLUGIN_MANAGER_NOT_INITIALIZED = 'PLG_4600_MANAGER_NOT_INITIALIZED',
  PLUGIN_BATCH_OPERATION_FAILED = 'PLG_4601_BATCH_OPERATION_FAILED',
  
  // Plugin manager errors (4150-4199)
  PLUGIN_MANAGER_INITIALIZATION_FAILED = 'PLG_4150_MANAGER_INITIALIZATION_FAILED',
  PLUGIN_MANAGER_START_FAILED = 'PLG_4151_MANAGER_START_FAILED',
  PLUGIN_MANAGER_STOP_FAILED = 'PLG_4152_MANAGER_STOP_FAILED',
  PLUGIN_UNLOAD_FAILED = 'PLG_4153_UNLOAD_FAILED',

  // ═══════════════════════════════════════════════════════════════════
  // Context Errors (5000-5999)
  // ═══════════════════════════════════════════════════════════════════
  
  // Context initialization (5000-5099)
  CONTEXT_INVALID_CONFIGURATION = 'CTX_5000_INVALID_CONFIGURATION',
  CONTEXT_MISSING_DEPENDENCIES = 'CTX_5001_MISSING_DEPENDENCIES',
  CONTEXT_INITIALIZATION_FAILED = 'CTX_5002_INITIALIZATION_FAILED',
  
  // Context phase transitions (5100-5199)
  CONTEXT_INVALID_PHASE_TRANSITION = 'CTX_5100_INVALID_PHASE_TRANSITION',
  CONTEXT_PHASE_TRANSITION_FAILED = 'CTX_5101_PHASE_TRANSITION_FAILED',
  
  // Context services (5200-5299)
  CONTEXT_SERVICE_UNAVAILABLE = 'CTX_5200_SERVICE_UNAVAILABLE',
  CONTEXT_SERVICE_INITIALIZATION_FAILED = 'CTX_5201_SERVICE_INITIALIZATION_FAILED',
  CONTEXT_SERVICE_RESOLUTION_FAILED = 'CTX_5202_SERVICE_RESOLUTION_FAILED',
  CONTEXT_SERVICE_REGISTRATION_FAILED = 'CTX_5203_SERVICE_REGISTRATION_FAILED',
  
  // Context messaging (5300-5399)
  CONTEXT_QUEUE_CREATION_FAILED = 'CTX_5300_QUEUE_CREATION_FAILED',
  CONTEXT_QUEUE_DELETION_FAILED = 'CTX_5301_QUEUE_DELETION_FAILED',
  CONTEXT_QUEUE_MESSAGE_SEND_FAILED = 'CTX_5302_QUEUE_MESSAGE_SEND_FAILED',
  CONTEXT_QUEUE_MESSAGE_RECEIVE_FAILED = 'CTX_5303_QUEUE_MESSAGE_RECEIVE_FAILED',
  CONTEXT_TOPIC_CREATION_FAILED = 'CTX_5304_TOPIC_CREATION_FAILED',
  CONTEXT_TOPIC_DELETION_FAILED = 'CTX_5305_TOPIC_DELETION_FAILED',
  CONTEXT_TOPIC_PUBLISH_FAILED = 'CTX_5306_TOPIC_PUBLISH_FAILED',
  CONTEXT_TOPIC_SUBSCRIBE_FAILED = 'CTX_5307_TOPIC_SUBSCRIBE_FAILED',
  CONTEXT_TOPIC_UNSUBSCRIBE_FAILED = 'CTX_5308_TOPIC_UNSUBSCRIBE_FAILED',
  
  // Context broker operations (5350-5399)
  CONTEXT_BROKER_CONNECTION_FAILED = 'CTX_5350_BROKER_CONNECTION_FAILED',
  CONTEXT_BROKER_FAILED = 'CTX_5351_BROKER_FAILED',
  
  // Context ports (5400-5499)
  CONTEXT_PORT_REGISTRATION_FAILED = 'CTX_5400_PORT_REGISTRATION_FAILED',
  
  // ═══════════════════════════════════════════════════════════════════
  // Event Hub Errors (6000-6999)
  // ═══════════════════════════════════════════════════════════════════
  
  // Event processing (6000-6099)
  EVENT_VALIDATION_FAILED = 'EVH_6000_VALIDATION_FAILED',
  EVENT_SERIALIZATION_FAILED = 'EVH_6001_SERIALIZATION_FAILED',
  EVENT_DESERIALIZATION_FAILED = 'EVH_6002_DESERIALIZATION_FAILED',
  EVENT_PROCESSING_FAILED = 'EVH_6003_PROCESSING_FAILED',
  EVENT_ROUTING_FAILED = 'EVH_6004_ROUTING_FAILED',
  EVENT_DELIVERY_FAILED = 'EVH_6005_DELIVERY_FAILED',
  
  // EventHub lifecycle and state (6050-6099)
  EVENTHUB_NOT_INITIALIZED = 'EVH_6050_NOT_INITIALIZED',
  EVENTHUB_ALREADY_INITIALIZED = 'EVH_6051_ALREADY_INITIALIZED',
  EVENTHUB_INVALID_STATE = 'EVH_6052_INVALID_STATE',
  EVENTHUB_SHUTDOWN_FAILED = 'EVH_6053_SHUTDOWN_FAILED',
  
  // Adapter errors (6150-6199)
  ADAPTER_INITIALIZATION_FAILED = 'EVH_6150_ADAPTER_INITIALIZATION_FAILED',
  ADAPTER_CONNECTION_FAILED = 'EVH_6151_ADAPTER_CONNECTION_FAILED',
  ADAPTER_DISCONNECTION_FAILED = 'EVH_6152_ADAPTER_DISCONNECTION_FAILED',
  ADAPTER_SEND_FAILED = 'EVH_6153_ADAPTER_SEND_FAILED',
  ADAPTER_RECEIVE_FAILED = 'EVH_6154_ADAPTER_RECEIVE_FAILED',
  ADAPTER_NOT_FOUND = 'EVH_6155_ADAPTER_NOT_FOUND',
  INVALID_ADAPTER_CONFIG = 'EVH_6156_INVALID_ADAPTER_CONFIG',
  
  // ═══════════════════════════════════════════════════════════════════
  // Resource Errors (7000-7999)
  // ═══════════════════════════════════════════════════════════════════
  
  // Resource access (7000-7099)
  RESOURCE_NOT_FOUND = 'RES_7000_RESOURCE_NOT_FOUND',
  RESOURCE_ACCESS_DENIED = 'RES_7001_ACCESS_DENIED',
  RESOURCE_ALREADY_EXISTS = 'RES_7002_ALREADY_EXISTS',
  RESOURCE_CREATION_FAILED = 'RES_7003_CREATION_FAILED',
  RESOURCE_DELETION_FAILED = 'RES_7004_DELETION_FAILED',
  RESOURCE_MODIFICATION_FAILED = 'RES_7005_MODIFICATION_FAILED',
  
  // Resource state (7100-7199)
  RESOURCE_LOCKED = 'RES_7100_LOCKED',
  RESOURCE_CORRUPTED = 'RES_7101_CORRUPTED',
  RESOURCE_UNAVAILABLE = 'RES_7102_UNAVAILABLE',
  RESOURCE_EXPIRED = 'RES_7103_EXPIRED',
  
  // Resource loading and content (7200-7299)
  RESOURCE_LOAD_FAILED = 'RES_7200_LOAD_FAILED',
  RESOURCE_PROTOCOL_NOT_SUPPORTED = 'RES_7201_PROTOCOL_NOT_SUPPORTED',
  RESOURCE_CONTENT_PARSE_ERROR = 'RES_7202_CONTENT_PARSE_ERROR',
  RESOURCE_NETWORK_ERROR = 'RES_7203_NETWORK_ERROR',
  
  // ═══════════════════════════════════════════════════════════════════
  // Configuration Errors (8000-8999)
  // ═══════════════════════════════════════════════════════════════════
  
  // Configuration loading (8000-8099)
  CONFIG_FILE_NOT_FOUND = 'CFG_8000_FILE_NOT_FOUND',
  CONFIG_PARSE_FAILED = 'CFG_8001_PARSE_FAILED',
  CONFIG_VALIDATION_FAILED = 'CFG_8002_VALIDATION_FAILED',
  CONFIG_SCHEMA_INVALID = 'CFG_8003_SCHEMA_INVALID',
  
  // Configuration access (8100-8199)
  CONFIG_PROPERTY_NOT_FOUND = 'CFG_8100_PROPERTY_NOT_FOUND',
  CONFIG_PROPERTY_INVALID = 'CFG_8101_PROPERTY_INVALID',
  CONFIG_ENVIRONMENT_ERROR = 'CFG_8102_ENVIRONMENT_ERROR',
  
  // ═══════════════════════════════════════════════════════════════════
  // Legacy Error Code Mappings (for backward compatibility)
  // ═══════════════════════════════════════════════════════════════════
  
  // These provide backward compatibility with existing code
  PROPERTY_NOT_FOUND = 'CFG_8100_PROPERTY_NOT_FOUND', // Maps to PropertyNotFoundException
}

/**
 * Error code categories for grouping and filtering
 */
export enum ErrorCodeCategory {
  SYSTEM = 'SYS',
  REGISTRY = 'REG',
  SERVICE = 'SVC',
  PLUGIN = 'PLG',
  CONTEXT = 'CTX',
  EVENT_HUB = 'EVH',
  RESOURCE = 'RES',
  CONFIG = 'CFG'
}

/**
 * Error severity levels
 */
export enum ErrorSeverity {
  LOW = 'LOW',
  MEDIUM = 'MEDIUM',
  HIGH = 'HIGH',
  CRITICAL = 'CRITICAL'
}

/**
 * Error code metadata for enhanced error handling
 */
export interface ErrorCodeMetadata {
  code: UnifiedErrorCode;
  category: ErrorCodeCategory;
  severity: ErrorSeverity;
  description: string;
  recoveryHint?: string;
  documentationUrl?: string;
}

/**
 * Utility functions for error code management
 */
export class ErrorCodeUtils {
  /**
   * Get error code category from unified code
   */
  static getCategory(code: UnifiedErrorCode): ErrorCodeCategory {
    return code.split('_')[0] as ErrorCodeCategory;
  }
  
  /**
   * Get error code number from unified code
   */
  static getCodeNumber(code: UnifiedErrorCode): number {
    const parts = code.split('_');
    return parseInt(parts[1], 10);
  }
  
  /**
   * Check if error code belongs to specific category
   */
  static isCategory(
    code: UnifiedErrorCode,
    category: ErrorCodeCategory
  ): boolean {
    return this.getCategory(code) === category;
  }
  
  /**
   * Check if error is recoverable based on severity
   */
  static isRecoverable(code: UnifiedErrorCode): boolean {
    // Most errors are recoverable except for critical system errors
    const category = this.getCategory(code);
    const codeNumber = this.getCodeNumber(code);
    
    // Critical system errors (1000-1099) with certain codes are non-recoverable
    if (category === ErrorCodeCategory.SYSTEM && codeNumber >= 1000 && codeNumber < 1100) {
      return ![1000].includes(codeNumber); // UNKNOWN_ERROR is non-recoverable
    }
    
    return true;
  }
}
